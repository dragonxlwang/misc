# use  "screen-256color" instead of "xterm-256color"
set -g default-terminal "screen-256color"
# Make mouse useful in copy mode
set -g mouse-utf8 on
set -g mouse on
# utf8
set -g utf8 on
set -g status-utf8 on
# shell
set-option -g default-shell /bin/zsh
# Start numbering at 1
set -g base-index 1
# Scroll History
set -g history-limit 50000
setw -g mode-keys vi

# Setting the prefix from C-b to C-a
set -g prefix C-a
unbind C-b              # Free the original Ctrl-b prefix keybinding
set -s escape-time 1    # setting the delay between prefix and command
bind C-a send-prefix    # Ensure that we can send Ctrl-A to other apps
# Set ability to capture on start and restore on exit window data when running
# an application
setw -g alternate-screen on
# Lower escape timing for quicker response to scroll-buffer/vim access.
set -s escape-time 0
# Update the status bar every 10 seconds
set -g status-interval 10
# automatically set window title
setw -g automatic-rename on
set -g renumber-windows on
# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on
# focus events enabled for terminals that support them
set -g focus-events on
# set terminal title
set-option -g set-titles on

# color
set -g status-fg white
set -g status-bg black
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg colour123 #white
setw -g window-status-current-bg colour088 #red
setw -g window-status-current-attr bright
set -g status-fg colour137 #white
set -g status-bg colour234 #black
set -g status-attr dim
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51
set -g message-fg white
set -g message-bg black
set -g message-attr bright
set -g status-left-length 40
set -g status-left "#[fg=colour202]#h #[fg=colour118]Session: #S #[fg=yellow]#I #[fg=colour128]#P "
# Status line right side
# 15% | 28 Nov 18:15
set -g status-right "#[fg=green,bold]#(date)"

# Pane and Windows
## hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
## resize panes using PREFIX H, J, K, L
bind < resize-pane -L 5
bind - resize-pane -D 5
bind + resize-pane -U 5
bind > resize-pane -R 5
bind = select-layout even-vertical
bind _ select-layout even-horizontal
## join and break
bind Space command-prompt "joinp -t:%%"       # join: default is verticle
bind C-Space command-prompt "joinp -h -t:%%"  # join: horizontal
bind Enter break-pane                         # break-pane
## new, rename window
bind C-c command-prompt -p "Name of new window: " "new-window -n '%%'"
bind C-a command-prompt "rename-window %%"
## set split pane and new window the same start directory
bind '"'  split-window -c "#{pane_current_path}"
bind %    split-window -h -c "#{pane_current_path}"
bind c    new-window -c "#{pane_current_path}"
## iterate over windows
unbind n
unbind p
bind C-j previous-window
bind C-k next-window
bind C-l last-window
## swap windows
unbind ,
bind , swap-window -t -1 # move window one position to the left
bind . swap-window -t +1 # move window one position to the right
bind / swap-window -t 1  # move window one position to top
# middle click on a window name in status bar to kill it
bind -T root MouseDown2Status kill-window
# bind Space list-panes # list panes
# clear history
# http://stackoverflow.com/questions/10543684/how-can-i-clear-scrollback-buffer-in-tmux
bind -n M-k send-keys -R \; send-keys C-l \; clear-history \; display-message "Clear history"

# mac: fix open command
# http://www.elmund.io/osx/2015/07/10/open-command-in-osx-tmux/
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"'

# reload tmux conf
bind-key r source-file ~/.tmux.conf\; display-message "resource ~/.tmux.conf"

# Middle click in a pane to paste:
bind -T root MouseDown2Pane run -b "tmux paste-buffer"

# vi-copy config
unbind-key -t vi-copy 'v'
unbind-key -t vi-copy Space
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy Space clear-selection
bind-key -t vi-copy 'C-v' rectangle-toggle

# ###################################################
# prefix, alt + y: copy to system clipboard
if-shell 'test "$(uname -s)" = Darwin' \
  'bind M-y run-shell "tmux show-buffer | pbcopy ; tmux display-message \"Copied tmux buffer to system clipboard\""' \
  'bind M-y run-shell "tmux show-buffer | ssh mac_mini pbcopy ; tmux display-message \"Copied tmux buffer to system clipboard\""'
# ###################################################
# mouse middle key to obtain & paste from system's clipboard
if-shell 'test "$(uname -s)" = Darwin' \
  'bind -T root C-MouseDown2Pane run -b "pbpaste | tmux load-buffer -; tmux paste-buffer"' \
  'bind -T root C-MouseDown2Pane run -b "ssh mac_mini pbpaste | tmux load-buffer -; tmux paste-busffer"' \

# enable home and end key
bind -n End send-key C-e
bind -n Home send-key C-a

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
# # until tmux-yank fixis the following issue:
# # https://github.com/tmux-plugins/tmux-yank/issues/55
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @tmux-yank-start-selection 'v'
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
set -g @plugin 'jbnicolai/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-resurrect'
run '~/.tmux/plugins/tpm/tpm'

