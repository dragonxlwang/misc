#!/bin/sh

# color
function yellowecho { echo -e "\033[1;33m${1}\033[0m" }
function blueecho { echo -e "\033[1;36m${1}\033[0m" }
function redecho { echo -e "\033[1;31m${1}\033[0m" }
ANSI_COLOR_RED="\e[31m"
ANSI_COLOR_RESET="\e[0m"

# boost library
export BOOST_ROOT="${HOME}/local/boost"
LD_LIBRARY_PATH+=":${HOME}/local/boost:${HOME}/local/boost/lib:/usr/local/lib"
export LD_LIBRARY_PATH
export PATH=${PATH}:${HOME}/local

function work { tmux new -AD -s main }
alias dir_size='for f in $("ls"); do du -lsh $f; done;'
alias rm='mv --verbose -f --backup=numbered --target-directory ~/.trash/'
alias empty_trash='/bin/rm -rf --verbose  ~/.trash/*'
alias cls='printf "\033c"'
alias eliot="ssh -X eliot.cs.illinois.edu"
alias run_matlab="matlab -nodesktop -nosplash -r"
alias ed_profile="vim ~/.profile_wangxl; source ~/.profile_wangxl"
alias ed_tmux="vim ~/.tmux.conf; tmux source-file ~/.tmux.conf"
alias ll="ls -alh"
function ll_symlink { 
    [[ $# -eq 1 ]] && { ll $1 | grep "\->"} || {ll | grep "\->"} }
function kill_jobs { for i in $(seq 1 $(jobs | wc -l)); do kill %$i; done }
function jump { if [[ $# -eq 1 ]]; then cd $1; fi; cd $(pwd -P); }
alias jp="jump"

# zsh
if [[ $options[extended_glob] == off ]]; then setopt extended_glob; fi

# git
alias xg_log='git --no-pager log --pretty=format:"%h - %an, %ar : %s"'
function xg_sl {
  local option=""
  # by default, zsh does not split word
  # three ways to enable spliting safely
  # ${=a}
  # ${(@s: :)a}
  # eval "(${a})"
  if [[ $# -eq 0 ]]; then option="-10"; else eval "option=(${@})"; fi
  # replace -10 with --all
  git --no-pager log $option --branches --graph --decorate
}
alias xg_ls='git ls-files'
alias xg_st='git status'
function xg_rm_last_commit {
  local ans=""
  echo -n "${ANSI_COLOR_RED}Delete Last Commit [Y/N]?${ANSI_COLOR_RESET} "
  read ans
  ans=$(echo ${ans} | tr "[:upper:]" "[:lower:]")
  if [[ $ans == yes || $ans == y ]]; then
    yellowecho "deleting..."
    git reset --hard "HEAD^"
  fi
}
alias xg_rk_last_commit='git reset --soft "HEAD^"'
alias xg_browse='hub browse'
alias xg_list_remote_repo_branch='git ls-remote origin'
alias xg_show_remote_repo='git remote show origin'
alias xg_dry_run_featch='git fetch --dry-run'
function xg_check_remote_up_2_date {
  if [[ -z $(git fetch --dry-run 3>&2 2>&1 1>&3) ]]
  then
    blueecho "Git: up to date"
  else
    redecho "Git: need update"
  fi
}
alias xg_diff="git diff HEAD"

###########################
# Timan Specific Settings #
###########################

export PATH=${PATH}:${HOME}/resource/vowpal_wabbit

alias killall="killall -u xwang95"
function kill_all_xwang95_proc {
    for i in $("ps" aux | grep xwang95 | awk '{print $2}' | tac)
    do
      kill -9 $i;
    done
}
alias python='/usr/bin/python'
function clean_nx_sessions {
  local SESSION_PATHS=$(find /tmp/nx/xwang95/.nx/ \
                            -maxdepth 1 -type d -user $USER)
  for SESSION in $SESSION_PATHS
  do
    echo rm  $SESSION
    rm  $SESSION
  done
}
alias clean_chrome_session="mv --verbose -f --backup=numbered \
                            --target-directory ~/.trash/  \
                            ${HOME}/.config/google-chrome/SingletonLock"
alias clean_chrome_profile="/bin/rm -rf ${HOME}/.config/google-chrome/Default"
sifaka_url="sifaka.cs.uiuc.edu/~xwang95"
timan100="xwang95@timan100.cs.uiuc.edu"
mac_mini="qchost236-189.cs.illinois.edu"
function from_backup { wget ${sifaka_url}/backup/$1 }
function to_backup { scp $1 ${timan100}:~/public_html/backup/ }
function from_content { wget ${sifaka_url}/content/$1 }
function to_content { scp $1 ${timan100}:~/public_html/content/ }
function from_local { scp xiaolong@${mac_mini}:~/ServerDownloads/$1 ./ }
function to_local { scp $1 xiaolong@${mac_mini}:~/ServerDownloads/ }
function from_public { wget ${sifaka_url}/public/$1 }
function to_public { scp $1 ${timan100}:~/public_html/public/ }
function to_data { scp $1 ${timan100}:~/public_html/content/data }

# install git from source
function install_git_from_source {
  cd ${HOME}
  local git_install_ver="git-2.6.3"
  sudo yum install curl-devel expat-devel gettext-devel \
	openssl-devel perl-devel zlib-devel
  wget https://www.kernel.org/pub/software/scm/git/${git_install_ver}.tar.gz
  tar -zxvf ${git_install_ver}.tar.gz
  cd ${git_install_ver}
  make prefix=/usr/local all
  sudo make prefix=/usr/local install
  cd ${HOME}
  rm -rf ${git_install_ver}
  rm -rf ${git_install_ver}.tar.gz
}
