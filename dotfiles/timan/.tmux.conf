#set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
# Make mouse useful in copy mode
set -g mouse-utf8 on
set -g mouse on
# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
# (commented out because it disables cursor navigation in vim)
# set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"
# Scroll History
set -g history-limit 10000
setw -g mode-keys vi

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

# Setting the prefix from C-b to C-a
# # START:prefix
set -g prefix C-a
# # END:prefix
# # Free the original Ctrl-b prefix keybinding
# # START:unbind
unbind C-b
# # END:unbind
# #setting the delay between prefix and command
# # START:delay
set -s escape-time 1
# # END:delay
# # Ensure that we can send Ctrl-A to other apps
# # START:bind_prefix
bind C-a send-prefix
# # END:bind_prefix

# # automatically set window title
setw -g automatic-rename on
#set-option -g allow-rename off
#setw -g automatic-rename off
set-option -g renumber-windows on
# # enable activity alerts
# #START:activity
setw -g monitor-activity on
set -g visual-activity on
# #END:activity

set -g status-fg white
set -g status-bg black
# # END:statuscolor
#
# # set the color of the window list
# # START:windowstatuscolor
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# # END:windowstatuscolor
#
# # set colors for the active window
# # START:activewindowstatuscolor
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
# # END:activewindowstatuscolor

# # set the status line's colors
# # START:statuscolor
set -g status-fg colour137 #white
set -g status-bg colour234 #black
set -g status-attr dim
# # END:statuscolor
#
# # set the color of the window list
# # START:windowstatuscolor
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# # END:windowstatuscolor
#
# # set colors for the active window
# # START:activewindowstatuscolor
setw -g window-status-current-fg colour123 #white
setw -g window-status-current-bg colour088 #red
setw -g window-status-current-attr bright
# # END:activewindowstatuscolor
#
# # pane colors
# # START:panecolors
# # border
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51
# # END:panecolors
#
# # Command / message line
# # START:cmdlinecolors
set -g message-fg white
set -g message-bg black
set -g message-attr bright
# # END:cmdlinecolors
#
# # Status line left side
# # START:statusleft
set -g status-left-length 40
set -g status-left "#[fg=colour202]#h #[fg=colour118]Session: #S #[fg=yellow]#I #[fg=colour128]#P "
# # END:statusleft
#
# #START:utf8
set -g status-utf8 on
# #END:utf8
#
# # Status line right side
# # 15% | 28 Nov 18:15
# # START: statusright
set -g status-right "#[fg=green,bold]#(date)"
# # END:statusright
#
# # Update the status bar every sixty seconds
# # START:updateinterval
set -g status-interval 60
# # END:updateinterval
#
set-option -g default-shell /bin/zsh

# Start numbering at 1
set -g base-index 1


#bind-key -Troot WheelUpPane copy-mode -t = \; send-keys -M
#
#unbind -T root WheelUpPane
#unbind -T root WheelDownPane
#bind -n WheelUpPane if-shell -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -e"'
bind -n WheelUpPane if-shell -Ft= "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
# Once in copy-mode, mouse wheel scrolls scrolls by half pages
#bind -temacs-copy WheelUpPane   halfpage-up
#bind -temacs-copy WheelDownPane halfpage-down

# middle click on a window name in status bar to kill it
bind -T root MouseDown2Status kill-window
# Middle click in a pane to paste::
## on linux
bind -T root C-MouseDown2Pane run -b "exec </dev/null; xclip -o | awk 1 ORS=' ' | tmux load-buffer - ; tmux paste-buffer"
## on mac
## paste from system's clipboard
#bind -T root C-MouseDown2Pane run -b "pbpaste | tmux load-buffer -; tmux paste-buffer"
## paste from tmux's clipboard
bind -T root MouseDown2Pane run -b "tmux paste-buffer"

# enable home and end key
bind -n End send-key C-e
bind -n Home send-key C-a

# enable alt + arrow
# in iterm 2, set global shortcut keys as "ESC + B" (or F)
# http://stackoverflow.com/questions/6801594/word-jumping-in-iterm2-or-terminal-in-osx-lion
#bind -n M-Left send-key M-b
#bind -n M-Right send-key M-f

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# list panes
# bind Space list-panes

# join pane
bind Space command-prompt "joinp -t:%%"       # default is verticle
bind C-Space command-prompt "joinp -h -t:%%"  # horizontal

# break-pane
bind Enter break-pane

# new window
bind C-c command-prompt -p "Name of new window: " "new-window -n '%%'"
# rename window
bind C-a command-prompt "rename-window %%"

# iterate over windows
unbind n
unbind p
bind C-j previous-window
bind C-k next-window
bind C-l last-window

# swap windows
unbind ,
bind , swap-window -t -1 # move window one position to the left
bind . swap-window -t +1 # move window one position to the right
bind / swap-window -t 1 # move window one position to top

# http://stackoverflow.com/questions/10543684/how-can-i-clear-scrollback-buffer-in-tmux
bind -n M-k send-keys 'C-l' \; clear-history \; display-message "Clear history"

## mac only: fix open command
## http://www.elmund.io/osx/2015/07/10/open-command-in-osx-tmux/
#set -g default-command "reattach-to-user-namespace -l ${SHELL}"

## mac only: copy to system clipboard
#bind y run-shell "tmux show-buffer | pbcopy" \; display-message "Copied tmux buffer to system clipboard"
## timan only: copy to system clipboard
bind y run-shell "tmux show-buffer | ssh mac_mini pbcopy" \; display-message "Copied tmux buffer to system clipboard"

set-option -g set-titles on
