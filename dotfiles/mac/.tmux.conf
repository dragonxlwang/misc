set -g default-terminal "xterm-256color"
# Make mouse useful in copy mode
set -g mouse-utf8 on
set -g mouse on
set-window-option -g mouse on
# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
# (commented out because it disables cursor navigation in vim)
#set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

#bind-key -Troot WheelUpPane copy-mode -t = \; send-keys -M
#
#unbind -T root WheelUpPane
#unbind -T root WheelDownPane
#bind -n WheelUpPane if-shell -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -e"'
bind -n WheelUpPane if-shell -Ft= "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Once in copy-mode, mouse wheel scrolls scrolls by half pages
#bind -temacs-copy WheelUpPane   halfpage-up
#bind -temacs-copy WheelDownPane halfpage-down
#
# Scroll History
set -g history-limit 10000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

# Setting the prefix from C-b to C-a
# # START:prefix
set -g prefix C-a  
# # END:prefix
# # Free the original Ctrl-b prefix keybinding
# # START:unbind
unbind C-b 
# # END:unbind
# #setting the delay between prefix and command
# # START:delay
set -s escape-time 1
# # END:delay
# # Ensure that we can send Ctrl-A to other apps
# # START:bind_prefix
bind C-a send-prefix
# # END:bind_prefix

#set -g default-terminal "screen-256color"


# # automatically set window title
#setw -g automatic-rename
#set-option -g allow-rename off
set-window-option -g automatic-rename off
set-option -g renumber-windows on
# # enable activity alerts
# #START:activity
# setw -g monitor-activity on
# set -g visual-activity on
# #END:activity
#
# # set the status line's colors
# # START:statuscolor
set -g status-fg white
set -g status-bg black
# # END:statuscolor
#
# # set the color of the window list
# # START:windowstatuscolor
setw -g window-status-fg cyan 
setw -g window-status-bg default 
setw -g window-status-attr dim
# # END:windowstatuscolor
#
# # set colors for the active window
# # START:activewindowstatuscolor
setw -g window-status-current-fg white 
setw -g window-status-current-bg red 
setw -g window-status-current-attr bright
# # END:activewindowstatuscolor
#
# # pane colors
# # START:panecolors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow
# # END:panecolors
#
# # Command / message line
# # START:cmdlinecolors
set -g message-fg white
set -g message-bg black
set -g message-attr bright
# # END:cmdlinecolors
#
# # Status line left side
# # START:statusleft
set -g status-left-length 40 
set -g status-left "#[fg=red]#h #[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P "
# # END:statusleft
#
# #START:utf8
set -g status-utf8 on
# #END:utf8
#
# # Status line right side
# # 15% | 28 Nov 18:15
# # START: statusright
set -g status-right "#[fg=green,bold]#(date)"
# # END:statusright
#
# # Update the status bar every sixty seconds
# # START:updateinterval
set -g status-interval 60
# # END:updateinterval
#
set-option -g default-shell /bin/zsh

# enable home and end key 
bind -n End send-key C-e
bind -n Home send-key C-a
