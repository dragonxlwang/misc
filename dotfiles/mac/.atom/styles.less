/*
 * Your Stylesheet
 *
 * This stylesheet is loaded when Atom starts up and is reloaded automatically
 * when it is changed and saved.
 *
 * Add your own CSS or Less to fully customize Atom.
 * If you are unfamiliar with Less, you can read more about it here:
 * http://lesscss.org
 */


/*
 * Examples
 * (To see them, uncomment and save)
 */

// style the background color of the tree view
.tree-view {
  // background-color: whitesmoke;
}

// http://cloford.com/resources/colours/500col.htm
// style the background and foreground colors on the atom-text-editor-element itself
atom-text-editor {
  color: #FAFAD2;
  // background-color: hsl(180, 24%, 12%);
}
// // To style other content in the text editor's shadow DOM, use the ::shadow expression
atom-text-editor::shadow {
  .variable {
    // this (js), @varable_name (sass),  variable of {{variable}} (handlebars)
    color: #FFD700;
    // foo & bar of function name(foo, bar)
    &.parameter.function { color: #00FF00; }
  }
  .keyword {
    // @ of @font-face & @media
    color: #FF7F00;
    // try, catch, if, else, return (js)
    &.control { color: #7CFC00; }
    // // =, +, -, ?, :, !=. &&, in (js)
    &.operator { color: #FF4500; }
  }
  // STORAGE |
  .storage {
    color: #EE7600;
    // var of var a = b;
    &.modifier { color: #EE7600; }
  }
  .constant {
    // true, false, null, undefined
    color: #FFFF00;
  //  // \ of ("what\'s")
  //   &.character.escape {
  //     color: rgba(255,215,0, 1);
  //   }
    // all the numbers!
    &.numeric { color: #7FFF00; }
  }
  .support {
    // background of background: none,
    color: #FF3E96;
    // SUPPORT | module of module.exports
    &.class { color: #FF3E96; }
    &.function  {
      color: #AF5FFF; // .log of console.log, url of url(http://web.com)
      // can't tell what this does :/
      &.any-method { color: #AF5FFF; }
    }
    // {{}} of {{ variable }} none of text-decoration: none;
    &.constant { color: #C6E2FF; }
    // &.type.property-name.css { color: red; }
  }
  // .string { color: #00FFFF;}
}

// https://github.com/richrace/highlight-selected
atom-text-editor, atom-text-editor::shadow {
  // Box
  .highlights .highlight-selected .region {
    border-color: #ddd;
  }
  // Background
  .highlights .highlight-selected.background .region {
    background-color: rgba(155, 149, 0, 0.6);
  }
  // Light theme box (set in settings)
  .highlights .highlight-selected.light-theme .region {
    border-color: rgba(255, 255, 0, 1.0);
  }
  // Light theme background (set in settings)
  .highlights .highlight-selected.light-theme.background .region {
    background-color: rgba(255, 255, 0, 0.2);
  }
}

// https://discuss.atom.io/t/how-to-change-find-and-replace-highlight-color/14750/7
atom-text-editor::shadow .highlight {
  &.find-result .region,
  &.current-result .region,
  &.current-result ~ .highlight.selection .region {
    z-index: -1;
  }

  &.find-result .region {
    background: rgba(255, 255, 0, 0.2);
    border: 2px solid rgba(255, 255, 0, 1);
  }

  &.current-result .region,
  &.current-result ~ .highlight.selection .region {
    background: rgba(255, 0, 0, 0.2);
    border: 2px solid rgba(255, 255, 0, 1);
  }
}

// t9md/atom-vim-mode-plus
atom-text-editor::shadow {
  .vim-mode-plus-highlight-search .region {
    border: 2px solid rgba(255, 255, 0, 1);
    background-color: rgba(255, 255, 0, 0.2);
  }
}
